{"version":3,"sources":["webpack:///./src/pages/clients.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","withLayout","style","padding","vertical","as","fontSize","columns","stackable","Row","Column","verticalAlign","width","color","href","floated","className","height","id","src","frameBorder","scrolling","marginHeight","marginWidth","dangerouslySetInnerHTML","__html","HeaderSubheader","props","children","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","create","factories","Header_HeaderSubheader","HeaderContent","Header_HeaderContent","Header","attached","block","disabled","dividing","icon","image","inverted","size","sub","subheader","textAlign","classNameBuilders","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","GridColumn","computer","largeScreen","mobile","only","stretched","tablet","widescreen","Grid_GridColumn","GridRow","centered","divided","reversed","Grid_GridRow","Grid","celled","container","doubling","padded","relaxed"],"mappings":"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","file":"component---src-pages-clients-tsx-c832e4a6f8e1abf61249.js","sourcesContent":["import * as React from \"react\";\nimport { Button, Divider, Grid, Header, List, Image, Container, Segment, Icon } from \"semantic-ui-react\";\nimport {withLayout} from \"../components/Layout\";\nimport car from \"../images/car.jpg\";\n\nconst ClientsPage = () => {\n  return (\n    <Container>\n      <Segment style={{ padding: \"4em 0em\" }} vertical>\n      <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n        Billing Phone Numbers\n      </Header>\n        <Grid columns=\"equal\" stackable>\n          <Grid.Row>\n            <Grid.Column>\n                <h3>Personal Lines</h3>\n                <p>\n                  FACT 1-888-685-5740 <br />\n                  Farmers 1-800-597-2548 <br />\n                  Foremost 1-800-527-3905 <br />\n                  Harleysville 1-800-338-8301 <br />\n                  Ohio Casualty 1-800-843-6446 <br />\n                  Progressive 1-877-776-2436 <br />\n                  Safeco 1-877-566-6001 <br />\n                  <br />\n                </p>\n            </Grid.Column>\n            <Grid.Column>\n                <h3>Commercial Lines</h3>\n                <p>\n                  Harleysville 1-800-338-8301 <br />\n                  Maryland 1-800-332-6641 <br />\n                  Ohio Casualty 1-800-843-6446 <br />\n                  Progressive 1-800-444-4487 <br />\n                  Safeco 1-877-566-6001 <br />\n                  Technology 1-888-629-1420    <br />      \n                </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Grid stackable verticalAlign=\"middle\">\n          <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n            Business Hours\n          </Header>\n          <Grid.Row>\n            <Grid.Column>\n              <p style={{ fontSize: \"1.33em\" }}>\n                Monday-Friday <br />8:30am - 4:30 pm EST     \n              </p>\n            </Grid.Column>\n          </Grid.Row>\n          <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n            Contact Information\n          </Header>\n          <Grid.Row>\n          <Grid.Column width={8}>\n              <h3>Address</h3>\n              <p style={{ fontSize: \"1.33em\" }}>\n                Hurst-Weiss Insurance <br />\n                <a style={{color: \"inherit\"}} href=\"https://www.google.com/maps/place/1653+McFarland+Rd,+Pittsburgh,+PA+15216/@40.394406,-80.046807,13z/data=!4m5!3m4!1s0x8834f70ec15a92e7:0x845976f1bc9bdd75!8m2!3d40.3944059!4d-80.0468068?hl=en-US\">\n                1653 McFarland Road <br />\n                Pittsburgh, PA  15216\n                </a>         \n              </p>\n              <h3>Phone</h3>\n              <p>\n                412-922-8222           \n              </p>\n              <h3>Email</h3>\n              <p>\n              <a href=\"mailto:info@hurstweiss.com\">info@hurstweiss.com</a>           \n              </p>\n              <h3>Fax</h3>\n              <p>\n                412-922-1588\n              </p>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={8}>\n              <div className=\"mapouter\"><div className=\"gmap_canvas\"><iframe width={400} height={400} id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=1653%20McFarland%20Road%20Pittsburgh%2C%20PA&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameBorder={0} scrolling=\"no\" marginHeight={0} marginWidth={0} /><a href=\"https://www.embedgooglemap.net\" /></div><style dangerouslySetInnerHTML={{__html: \".mapouter{text-align:right;height:400px;width:400px;}.gmap_canvas {overflow:hidden;background:none!important;height:400px;width:400px;}\" }} /></div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(ClientsPage);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Image from '../../elements/Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}