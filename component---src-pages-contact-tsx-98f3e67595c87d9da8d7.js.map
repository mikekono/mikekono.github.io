{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js"],"names":["withLayout","style","padding","vertical","container","stackable","verticalAlign","Row","Column","width","as","fontSize","color","href","floated","className","height","id","src","frameBorder","scrolling","marginHeight","marginWidth","dangerouslySetInnerHTML","__html","horizontal","margin","textTransform","display","flexDirection","justifyContent","to","primary","size","name","Divider","props","children","clearing","content","fitted","hidden","inverted","section","classes","rest","ElementType","createElement","isNil","handledProps","propTypes"],"mappings":"6FAAA,mIAmEeA,uBA7DK,WAClB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAASC,MAAO,CAAEC,QAAS,WAAaC,UAAQ,GAC9C,gBAAC,IAAD,CAAMC,WAAS,EAACC,WAAS,EAACC,cAAc,UACtC,gBAAC,IAAKC,IAAN,KACE,gBAAC,IAAKC,OAAN,CAAaC,MAAO,GAClB,gBAAC,IAAD,CAAQC,GAAG,KAAKT,MAAO,CAAEU,SAAU,QAAnC,cAGA,qCACA,qBAAGV,MAAO,CAAEU,SAAU,WAAtB,yBACwB,2BACtB,qBAAGV,MAAO,CAACW,MAAO,WAAYC,KAAK,qMAAnC,uBACoB,2BADpB,0BAKF,mCACA,yCAGA,mCACA,yBACA,qBAAGA,KAAK,8BAAR,wBAEA,iCACA,0CAIF,gBAAC,IAAKL,OAAN,CAAaM,QAAQ,QAAQL,MAAO,GAClC,uBAAKM,UAAU,YAAW,uBAAKA,UAAU,eAAc,0BAAQN,MAAO,IAAKO,OAAQ,IAAKC,GAAG,cAAcC,IAAI,kHAAkHC,YAAa,EAAGC,UAAU,KAAKC,aAAc,EAAGC,YAAa,IAAK,qBAAGT,KAAK,oCAAyC,yBAAOU,wBAAyB,CAACC,OAAQ,iJAIjY,gBAAC,IAAD,CACEd,GAAG,KACHK,UAAU,SACVU,YAAU,EACVxB,MAAO,CAAEyB,OAAQ,UAAWC,cAAe,cAE3C,qBAAGd,KAAK,KAAR,OAEF,uBAAKZ,MAAO,CACF2B,QAAS,OACTC,cAAe,MACfC,eAAgB,WAE1B,gBAAC,OAAD,CAAMC,GAAG,cACP,gBAAC,IAAD,CAAQC,SAAO,EAACC,KAAK,QAArB,yBAEE,gBAAC,IAAD,CAAMC,KAAK,yB,kCC1DvB,+HASA,SAASC,EAAQC,GACf,IAAIC,EAAWD,EAAMC,SACjBtB,EAAYqB,EAAMrB,UAClBuB,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAASJ,EAAMI,OACfC,EAASL,EAAMK,OACfhB,EAAaW,EAAMX,WACnBiB,EAAWN,EAAMM,SACjBC,EAAUP,EAAMO,QAChBxC,EAAWiC,EAAMjC,SACjByC,EAAU,IAAG,KAAM,YAAWN,EAAU,YAAa,YAAWE,EAAQ,UAAW,YAAWC,EAAQ,UAAW,YAAWhB,EAAY,cAAe,YAAWiB,EAAU,YAAa,YAAWC,EAAS,WAAY,YAAWxC,EAAU,YAAa,UAAWY,GACtQ8B,EAAO,YAAkBV,EAASC,GAClCU,EAAc,YAAeX,EAASC,GAC1C,OAAO,IAAMW,cAAcD,EAAa,IAAS,GAAID,EAAM,CACzD9B,UAAW6B,IACT,IAAcI,MAAMX,GAAYE,EAAUF,GAGhDF,EAAQc,aAAe,CAAC,KAAM,WAAY,YAAa,WAAY,UAAW,SAAU,SAAU,aAAc,WAAY,UAAW,YACvId,EAAQe,UAiCJ,GACW","file":"component---src-pages-contact-tsx-98f3e67595c87d9da8d7.js","sourcesContent":["import * as React from \"react\";\nimport { Button, Divider, Grid, Header, Image, Container, Segment, Icon } from \"semantic-ui-react\";\nimport {withLayout} from \"../components/Layout\";\nimport car from \"../images/car.jpg\";\nimport { Link } from \"gatsby\";\n\nconst ContactPage = () => {\n  return (\n    <Container>\n      <Segment style={{ padding: \"4em 0em\" }} vertical>\n        <Grid container stackable verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n                Contact Us\n              </Header>\n              <h3>Address</h3>\n              <p style={{ fontSize: \"1.33em\" }}>\n                Hurst-Weiss Insurance <br />\n                <a style={{color: \"inherit\"}} href=\"https://www.google.com/maps/place/1653+McFarland+Rd,+Pittsburgh,+PA+15216/@40.394406,-80.046807,13z/data=!4m5!3m4!1s0x8834f70ec15a92e7:0x845976f1bc9bdd75!8m2!3d40.3944059!4d-80.0468068?hl=en-US\">\n                1653 McFarland Road <br />\n                Pittsburgh, PA  15216\n                </a>         \n              </p>\n              <h3>Phone</h3>\n              <p>\n                412-922-8222           \n              </p>\n              <h3>Email</h3>\n              <p>\n              <a href=\"mailto:info@hurstweiss.com\">info@hurstweiss.com</a>           \n              </p>\n              <h3>Fax</h3>\n              <p>\n                412-922-1588\n              </p>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={8}>\n              <div className=\"mapouter\"><div className=\"gmap_canvas\"><iframe width={400} height={400} id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=1653%20McFarland%20Road%20Pittsburgh%2C%20PA&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameBorder={0} scrolling=\"no\" marginHeight={0} marginWidth={0} /><a href=\"https://www.embedgooglemap.net\" /></div><style dangerouslySetInnerHTML={{__html: \".mapouter{text-align:right;height:400px;width:400px;}.gmap_canvas {overflow:hidden;background:none!important;height:400px;width:400px;}\" }} /></div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n        >\n          <a href=\"#\">Or</a>\n        </Divider>\n        <div style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}>\n        <Link to=\"/insurance\">\n          <Button primary size=\"huge\">\n            Request a Quote Online\n            <Icon name=\"right arrow\" />\n          </Button>\n        </Link>\n      </div>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(ContactPage);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;"],"sourceRoot":""}