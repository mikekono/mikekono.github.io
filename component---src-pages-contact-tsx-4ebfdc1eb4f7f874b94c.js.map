{"version":3,"sources":["webpack:///./src/pages/contact.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","gatsby__WEBPACK_IMPORTED_MODULE_9__","withLayout","style","padding","vertical","container","stackable","verticalAlign","Row","Column","width","as","fontSize","color","href","floated","className","height","id","src","frameBorder","scrolling","marginHeight","marginWidth","dangerouslySetInnerHTML","__html","horizontal","margin","textTransform","display","flexDirection","justifyContent","to","primary","size","name","HeaderSubheader","props","children","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","create","factories","Header_HeaderSubheader","HeaderContent","Header_HeaderContent","Header","attached","block","disabled","dividing","icon","image","inverted","sub","subheader","textAlign","classNameBuilders","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","GridColumn","computer","largeScreen","mobile","only","stretched","tablet","widescreen","Grid_GridColumn","GridRow","centered","columns","divided","reversed","Grid_GridRow","Grid","celled","doubling","padded","relaxed","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","Divider","clearing","fitted","hidden","section"],"mappings":"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","file":"component---src-pages-contact-tsx-4ebfdc1eb4f7f874b94c.js","sourcesContent":["import * as React from \"react\";\nimport { Button, Divider, Grid, Header, Image, Container, Segment, Icon } from \"semantic-ui-react\";\nimport {withLayout} from \"../components/Layout\";\nimport car from \"../images/car.jpg\";\nimport { Link } from \"gatsby\";\n\nconst ContactPage = () => {\n  return (\n    <Container>\n      <Segment style={{ padding: \"4em 0em\" }} vertical>\n        <Grid container stackable verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n                Contact Us\n              </Header>\n              <h3>Address</h3>\n              <p style={{ fontSize: \"1.33em\" }}>\n                Hurst-Weiss Insurance <br />\n                <a style={{color: \"inherit\"}} href=\"https://www.google.com/maps/place/1653+McFarland+Rd,+Pittsburgh,+PA+15216/@40.394406,-80.046807,13z/data=!4m5!3m4!1s0x8834f70ec15a92e7:0x845976f1bc9bdd75!8m2!3d40.3944059!4d-80.0468068?hl=en-US\">\n                1653 McFarland Road <br />\n                Pittsburgh, PA  15216\n                </a>         \n              </p>\n              <h3>Phone</h3>\n              <p>\n                412-922-8222           \n              </p>\n              <h3>Email</h3>\n              <p>\n              <a href=\"mailto:info@hurstweiss.com\">info@hurstweiss.com</a>           \n              </p>\n              <h3>Fax</h3>\n              <p>\n                412-922-1588\n              </p>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={8}>\n              <div className=\"mapouter\"><div className=\"gmap_canvas\"><iframe width={400} height={400} id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=1653%20McFarland%20Road%20Pittsburgh%2C%20PA&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameBorder={0} scrolling=\"no\" marginHeight={0} marginWidth={0} /><a href=\"https://www.embedgooglemap.net\" /></div><style dangerouslySetInnerHTML={{__html: \".mapouter{text-align:right;height:400px;width:400px;}.gmap_canvas {overflow:hidden;background:none!important;height:400px;width:400px;}\" }} /></div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n        >\n          <a href=\"#\">Or</a>\n        </Divider>\n        <div style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}>\n        <Link to=\"/insurance\">\n          <Button primary size=\"huge\">\n            Request a Quote Online\n            <Icon name=\"right arrow\" />\n          </Button>\n        </Link>\n      </div>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(ContactPage);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Image from '../../elements/Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;"],"sourceRoot":""}