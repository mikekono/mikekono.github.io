{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","withLayout","centered","verticalAlign","style","minHeight","Column","Row","textAlign","name","size","as","HeaderSubheader","props","children","className","content","classes","classnames_default","rest","Object","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","create","factories","Header_HeaderSubheader","HeaderContent","Header_HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","sub","subheader","classNameBuilders","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","GridColumn","computer","largeScreen","mobile","only","stretched","tablet","widescreen","width","Grid_GridColumn","GridRow","columns","divided","reversed","Grid_GridRow","Grid","celled","container","doubling","padded","relaxed","stackable"],"mappings":"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","file":"component---src-pages-404-tsx-10f80e84fed2c5ea3b02.js","sourcesContent":["import * as React from \"react\";\nimport { Header, Icon, Grid } from \"semantic-ui-react\";\nimport {withLayout} from \"../components/Layout\";\n\nconst NotFoundPage = () =>\n    <Grid centered verticalAlign=\"middle\"\n      style={{\n        minHeight: \"700px\",\n        }}\n      >\n      <Grid.Column>\n        <Grid.Row style={{textAlign: \"center\"}}>\n          <Icon name=\"marker\" size=\"huge\"/>\n          <Header as=\"h1\">You are here!</Header>\n          <Header as=\"h2\">But nothing found for you #404</Header>\n        </Grid.Row>\n      </Grid.Column>\n    </Grid>;\n\nexport default withLayout(NotFoundPage);\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Image from '../../elements/Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf(_toConsumableArray(SUI.WIDTHS).concat(['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;"],"sourceRoot":""}