{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx","webpack:///./src/components/BlogTitle.tsx"],"names":["withLayout","props","_props$data$post","data","post","frontmatter","html","tags","timeToRead","map","tag","react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","recents","edges","_ref","node","extra","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","Group","Content","Metadata","style","margin","fields","slug","paddingBottom","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","as","Link","header","title","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","_components_BlogTitle__WEBPACK_IMPORTED_MODULE_10__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","vertical","border","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","dangerouslySetInnerHTML","__html","semantic_ui_react__WEBPACK_IMPORTED_MODULE_9__","padded","centered","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","name","Subheader"],"mappings":"qPAyEeA,sBAvDM,SAACC,GAAyB,IAAAC,EACHD,EAAME,KAAKC,KAA7CC,EADqCH,EACrCG,YAAaC,EADwBJ,EACxBI,KAEfC,GAHuCL,EAClBM,WAEdP,EAAME,KAAKC,KAAKC,YAAYE,KACtCE,IAAI,SAACC,GAAD,OAASC,EAAA,cAACC,EAAA,EAAD,CAAOC,IAAKH,GAAKC,EAAA,cAACG,EAAA,KAAD,CAAMC,GAAE,cAAgBL,EAAhB,KAAyBA,OAE5DM,EAAUf,EAAME,KAAKa,QAAQC,MAChCR,IAAI,SAAAS,GAAc,IAAXC,EAAWD,EAAXC,KACAC,EACJT,EAAA,cAACU,EAAA,EAAQC,MAAT,KACEX,EAAA,cAACU,EAAA,EAAD,KACEV,EAAA,cAACU,EAAA,EAAQE,QAAT,KACEZ,EAAA,cAACU,EAAA,EAAQG,SAAT,CAAkBC,MAAO,CAAEC,OAAQ,IAChCP,EAAKX,WADR,gBAQR,OACEG,EAAA,qBAAKE,IAAKM,EAAKQ,OAAOC,KAAMH,MAAO,CAAEI,cAAe,QAClDlB,EAAA,cAACmB,EAAA,EAAD,CAAMC,GAAIC,OACRjB,GAAII,EAAKQ,OAAOC,KAChBK,OAAQd,EAAKd,YAAY6B,MACzBd,MAAOA,OAMjB,OACET,EAAA,cAACwB,EAAA,EAAD,KACExB,EAAA,cAACyB,EAAA,EAAD,MACAzB,EAAA,cAAC0B,EAAA,EAAD,CAASC,UAAQ,EAACb,MAAO,CAAEc,OAAQ,SACjC5B,EAAA,cAAC6B,EAAA,EAAD,CAAQT,GAAG,MAAM1B,EAAY6B,QAE/BvB,EAAA,cAAC0B,EAAA,EAAD,CAASC,UAAQ,EACfb,MAAO,CAAEc,OAAQ,QACjBE,wBAAyB,CACvBC,OAAQpC,KAGZK,EAAA,cAAC0B,EAAA,EAAD,CAASC,UAAQ,GACd/B,GAEHI,EAAA,cAAC0B,EAAA,EAAD,CAASC,UAAQ,GACf3B,EAAA,cAACgC,EAAA,EAAD,CAAMC,QAAM,EAACC,UAAQ,GAClB7B,OASJ,IAAM8B,EAAS,+CC3EtB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,KAAApC,EAAAoC,EAAA,KAGeG,EAAA,aACb,OACEJ,EAAA,cAACE,EAAA,EAAD,CAASX,UAAQ,GACfS,EAAA,cAACG,EAAA,EAAD,CAAQnB,GAAG,MACTgB,EAAA,cAACnC,EAAA,EAAD,CAAMwC,KAAK,cACXL,EAAA,cAACG,EAAA,EAAO3B,QAAR,yBAEIwB,EAAA,cAACG,EAAA,EAAOG,UAAR","file":"component---src-templates-blog-post-tsx-da174447791dda50b9d1.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { get } from \"lodash\";\nimport { Header, Container, Segment, Icon, Label, Button, Grid, Card, Image, Item, Comment } from \"semantic-ui-react\";\nimport { MarkdownRemark, ImageSharp, MarkdownRemarkConnection, Site } from \"../graphql-types\";\nimport BlogTitle from \"../components/BlogTitle\";\nimport { DiscussionEmbed } from \"disqus-react\";\nimport {withLayout, LayoutProps} from \"../components/Layout\";\nimport { graphql } from \"gatsby\";\n\ninterface BlogPostProps extends LayoutProps {\n  data: {\n    post: MarkdownRemark;\n    recents: MarkdownRemarkConnection;\n    site: Site\n  };\n}\n\nconst BlogPostPage = (props: BlogPostProps) => {\n  const { frontmatter, html, timeToRead } = props.data.post;\n\n  const tags = props.data.post.frontmatter.tags\n    .map((tag) => <Label key={tag}><Link to={`/blog/tags/${tag}/`}>{tag}</Link></Label>);\n\n  const recents = props.data.recents.edges\n    .map(({ node }) => {\n      const extra = (\n        <Comment.Group>\n          <Comment>\n            <Comment.Content>\n              <Comment.Metadata style={{ margin: 0 }}>\n                {node.timeToRead} min read\n              </Comment.Metadata>\n            </Comment.Content>\n          </Comment>\n        </Comment.Group>\n      );\n\n      return (\n        <div key={node.fields.slug} style={{ paddingBottom: \"1em\" }}>\n          <Card as={Link}\n            to={node.fields.slug}\n            header={node.frontmatter.title}\n            extra={extra}\n          />\n        </div>\n      );\n    });\n\n  return (\n    <Container>\n      <BlogTitle />\n      <Segment vertical style={{ border: \"none\" }}>\n        <Header as=\"h1\">{frontmatter.title}</Header>\n      </Segment>\n      <Segment vertical\n        style={{ border: \"none\" }}\n        dangerouslySetInnerHTML={{\n          __html: html,\n        }}\n      />\n      <Segment vertical>\n        {tags}\n      </Segment>\n      <Segment vertical>\n        <Grid padded centered>\n          {recents}\n        </Grid>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default withLayout(BlogPostPage);\n\nexport const pageQuery = graphql`\n  query TemplateBlogPost($slug: String!) {\n  site: site {\n    siteMetadata {\n        disqus\n    }\n  }\n  post: markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    excerpt\n    timeToRead\n    fields {\n      slug\n    }\n    frontmatter {\n      tags\n      title\n      updatedDate(formatString: \"MMM D, YYYY\")\n    }\n  }\n  recents: allMarkdownRemark(\n    filter: {\n      fields: {slug: {ne: $slug}}\n      frontmatter: {draft: {ne: true}},\n      fileAbsolutePath: {regex: \"/blog/\"},\n    },\n    sort: {order: DESC, fields: [frontmatter___updatedDate]},\n    limit: 4\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          title\n          author {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n`;\n","import * as React from \"react\";\nimport { Header, Segment, Icon } from \"semantic-ui-react\";\n\nexport default () => {\n  return (\n    <Segment vertical>\n      <Header as=\"h2\">\n        <Icon name=\"newspaper\" />\n        <Header.Content>\n          Common Cent$ Blog\n            <Header.Subheader>\n            Common sense ain't common. - Will Roger\n            </Header.Subheader>\n        </Header.Content>\n      </Header>\n    </Segment>\n  );\n};\n"],"sourceRoot":""}